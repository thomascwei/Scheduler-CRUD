// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: proto/schedule.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_schedule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_schedule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_schedule_proto_rawDescGZIP(), []int{0}
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Command    string `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	CreateTime string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_schedule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_proto_schedule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_proto_schedule_proto_rawDescGZIP(), []int{1}
}

func (x *Command) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Command) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Command) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type CommandsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command []*Command `protobuf:"bytes,1,rep,name=command,proto3" json:"command,omitempty"`
}

func (x *CommandsResp) Reset() {
	*x = CommandsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_schedule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandsResp) ProtoMessage() {}

func (x *CommandsResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_schedule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandsResp.ProtoReflect.Descriptor instead.
func (*CommandsResp) Descriptor() ([]byte, []int) {
	return file_proto_schedule_proto_rawDescGZIP(), []int{2}
}

func (x *CommandsResp) GetCommand() []*Command {
	if x != nil {
		return x.Command
	}
	return nil
}

type GetScheduleOneReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetScheduleOneReq) Reset() {
	*x = GetScheduleOneReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_schedule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScheduleOneReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduleOneReq) ProtoMessage() {}

func (x *GetScheduleOneReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_schedule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduleOneReq.ProtoReflect.Descriptor instead.
func (*GetScheduleOneReq) Descriptor() ([]byte, []int) {
	return file_proto_schedule_proto_rawDescGZIP(), []int{3}
}

func (x *GetScheduleOneReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetScheduleOneResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TimeTypeId      int32                  `protobuf:"varint,2,opt,name=time_type_id,json=timeTypeId,proto3" json:"time_type_id,omitempty"`
	IntervalDay     int32                  `protobuf:"varint,3,opt,name=interval_day,json=intervalDay,proto3" json:"interval_day,omitempty"`
	IntervalSeconds int32                  `protobuf:"varint,4,opt,name=interval_seconds,json=intervalSeconds,proto3" json:"interval_seconds,omitempty"`
	AtTime          string                 `protobuf:"bytes,5,opt,name=at_time,json=atTime,proto3" json:"at_time,omitempty"`
	StartTime       string                 `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime         string                 `protobuf:"bytes,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	CommandId       int32                  `protobuf:"varint,8,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	Name            string                 `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	StartDate       *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate         *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Enable          bool                   `protobuf:"varint,12,opt,name=enable,proto3" json:"enable,omitempty"`
	Repeat          bool                   `protobuf:"varint,13,opt,name=repeat,proto3" json:"repeat,omitempty"`
	CreateTime      *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=createTime,proto3" json:"createTime,omitempty"`
	RepeatWeekday   []string               `protobuf:"bytes,15,rep,name=repeat_weekday,json=repeatWeekday,proto3" json:"repeat_weekday,omitempty"`
	RepeatDay       []string               `protobuf:"bytes,16,rep,name=repeat_day,json=repeatDay,proto3" json:"repeat_day,omitempty"`
	RepeatMonth     []string               `protobuf:"bytes,17,rep,name=repeat_month,json=repeatMonth,proto3" json:"repeat_month,omitempty"`
}

func (x *GetScheduleOneResp) Reset() {
	*x = GetScheduleOneResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_schedule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScheduleOneResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduleOneResp) ProtoMessage() {}

func (x *GetScheduleOneResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_schedule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduleOneResp.ProtoReflect.Descriptor instead.
func (*GetScheduleOneResp) Descriptor() ([]byte, []int) {
	return file_proto_schedule_proto_rawDescGZIP(), []int{4}
}

func (x *GetScheduleOneResp) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetScheduleOneResp) GetTimeTypeId() int32 {
	if x != nil {
		return x.TimeTypeId
	}
	return 0
}

func (x *GetScheduleOneResp) GetIntervalDay() int32 {
	if x != nil {
		return x.IntervalDay
	}
	return 0
}

func (x *GetScheduleOneResp) GetIntervalSeconds() int32 {
	if x != nil {
		return x.IntervalSeconds
	}
	return 0
}

func (x *GetScheduleOneResp) GetAtTime() string {
	if x != nil {
		return x.AtTime
	}
	return ""
}

func (x *GetScheduleOneResp) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *GetScheduleOneResp) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *GetScheduleOneResp) GetCommandId() int32 {
	if x != nil {
		return x.CommandId
	}
	return 0
}

func (x *GetScheduleOneResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetScheduleOneResp) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetScheduleOneResp) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetScheduleOneResp) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *GetScheduleOneResp) GetRepeat() bool {
	if x != nil {
		return x.Repeat
	}
	return false
}

func (x *GetScheduleOneResp) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *GetScheduleOneResp) GetRepeatWeekday() []string {
	if x != nil {
		return x.RepeatWeekday
	}
	return nil
}

func (x *GetScheduleOneResp) GetRepeatDay() []string {
	if x != nil {
		return x.RepeatDay
	}
	return nil
}

func (x *GetScheduleOneResp) GetRepeatMonth() []string {
	if x != nil {
		return x.RepeatMonth
	}
	return nil
}

var File_proto_schedule_proto protoreflect.FileDescriptor

var file_proto_schedule_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x54, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x0c, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe1, 0x04, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x44,
	0x61, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x61, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x77, 0x65, 0x65, 0x6b,
	0x64, 0x61, 0x79, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x57, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x44, 0x61, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x32, 0x85, 0x01, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x52, 0x55, 0x44, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x73, 0x12, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x10, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x4f, 0x6e, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_schedule_proto_rawDescOnce sync.Once
	file_proto_schedule_proto_rawDescData = file_proto_schedule_proto_rawDesc
)

func file_proto_schedule_proto_rawDescGZIP() []byte {
	file_proto_schedule_proto_rawDescOnce.Do(func() {
		file_proto_schedule_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_schedule_proto_rawDescData)
	})
	return file_proto_schedule_proto_rawDescData
}

var file_proto_schedule_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_schedule_proto_goTypes = []interface{}{
	(*Empty)(nil),                 // 0: pb.Empty
	(*Command)(nil),               // 1: pb.Command
	(*CommandsResp)(nil),          // 2: pb.CommandsResp
	(*GetScheduleOneReq)(nil),     // 3: pb.GetScheduleOneReq
	(*GetScheduleOneResp)(nil),    // 4: pb.GetScheduleOneResp
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_proto_schedule_proto_depIdxs = []int32{
	1, // 0: pb.CommandsResp.command:type_name -> pb.Command
	5, // 1: pb.GetScheduleOneResp.start_date:type_name -> google.protobuf.Timestamp
	5, // 2: pb.GetScheduleOneResp.end_date:type_name -> google.protobuf.Timestamp
	5, // 3: pb.GetScheduleOneResp.createTime:type_name -> google.protobuf.Timestamp
	0, // 4: pb.GetScheduleCRUDService.GetCommands:input_type -> pb.Empty
	3, // 5: pb.GetScheduleCRUDService.GetScheduleOne:input_type -> pb.GetScheduleOneReq
	2, // 6: pb.GetScheduleCRUDService.GetCommands:output_type -> pb.CommandsResp
	4, // 7: pb.GetScheduleCRUDService.GetScheduleOne:output_type -> pb.GetScheduleOneResp
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_schedule_proto_init() }
func file_proto_schedule_proto_init() {
	if File_proto_schedule_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_schedule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_schedule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_schedule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_schedule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScheduleOneReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_schedule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetScheduleOneResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_schedule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_schedule_proto_goTypes,
		DependencyIndexes: file_proto_schedule_proto_depIdxs,
		MessageInfos:      file_proto_schedule_proto_msgTypes,
	}.Build()
	File_proto_schedule_proto = out.File
	file_proto_schedule_proto_rawDesc = nil
	file_proto_schedule_proto_goTypes = nil
	file_proto_schedule_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GetScheduleCRUDServiceClient is the client API for GetScheduleCRUDService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GetScheduleCRUDServiceClient interface {
	GetCommands(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CommandsResp, error)
	GetScheduleOne(ctx context.Context, in *GetScheduleOneReq, opts ...grpc.CallOption) (*GetScheduleOneResp, error)
}

type getScheduleCRUDServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGetScheduleCRUDServiceClient(cc grpc.ClientConnInterface) GetScheduleCRUDServiceClient {
	return &getScheduleCRUDServiceClient{cc}
}

func (c *getScheduleCRUDServiceClient) GetCommands(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CommandsResp, error) {
	out := new(CommandsResp)
	err := c.cc.Invoke(ctx, "/pb.GetScheduleCRUDService/GetCommands", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getScheduleCRUDServiceClient) GetScheduleOne(ctx context.Context, in *GetScheduleOneReq, opts ...grpc.CallOption) (*GetScheduleOneResp, error) {
	out := new(GetScheduleOneResp)
	err := c.cc.Invoke(ctx, "/pb.GetScheduleCRUDService/GetScheduleOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetScheduleCRUDServiceServer is the server API for GetScheduleCRUDService service.
type GetScheduleCRUDServiceServer interface {
	GetCommands(context.Context, *Empty) (*CommandsResp, error)
	GetScheduleOne(context.Context, *GetScheduleOneReq) (*GetScheduleOneResp, error)
}

// UnimplementedGetScheduleCRUDServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGetScheduleCRUDServiceServer struct {
}

func (*UnimplementedGetScheduleCRUDServiceServer) GetCommands(context.Context, *Empty) (*CommandsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommands not implemented")
}
func (*UnimplementedGetScheduleCRUDServiceServer) GetScheduleOne(context.Context, *GetScheduleOneReq) (*GetScheduleOneResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetScheduleOne not implemented")
}

func RegisterGetScheduleCRUDServiceServer(s *grpc.Server, srv GetScheduleCRUDServiceServer) {
	s.RegisterService(&_GetScheduleCRUDService_serviceDesc, srv)
}

func _GetScheduleCRUDService_GetCommands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetScheduleCRUDServiceServer).GetCommands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GetScheduleCRUDService/GetCommands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetScheduleCRUDServiceServer).GetCommands(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetScheduleCRUDService_GetScheduleOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetScheduleOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetScheduleCRUDServiceServer).GetScheduleOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GetScheduleCRUDService/GetScheduleOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetScheduleCRUDServiceServer).GetScheduleOne(ctx, req.(*GetScheduleOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GetScheduleCRUDService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.GetScheduleCRUDService",
	HandlerType: (*GetScheduleCRUDServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCommands",
			Handler:    _GetScheduleCRUDService_GetCommands_Handler,
		},
		{
			MethodName: "GetScheduleOne",
			Handler:    _GetScheduleCRUDService_GetScheduleOne_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/schedule.proto",
}
